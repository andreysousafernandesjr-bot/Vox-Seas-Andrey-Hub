local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Conexões
local killAuraConnection
local bringMobsConnection
local autoFarmConnection
local infiniteJumpConnection
local walkSpeedConnection

-- Configs
local killDistance = 20
local infiniteJumpEnabled = false
local walkSpeedValue = 16
local walkSpeedEnabled = false

-- Rayfield UI
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Vox Seas Andrey Hub Versão Beta",
   Icon = 0,
   LoadingTitle = "Andrey Hub",
   LoadingSubtitle = "Criado por Andreyjr0250",
   ShowText = "Andrey Hub",
   Theme = "Green",
   ToggleUIKeybind = "K",
   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Andrey Hub"
   },
   Discord = {
      Enabled = true,
      Invite = "KkVZEcwN",
      RememberJoins = true
   },
   KeySystem = false
})

-- Tabs
local infotab = Window:CreateTab("InfoTab", 4483362458)
local farmtab = Window:CreateTab("FarmTab", 4483362458)
local configtab = Window:CreateTab("ConfiguraçõesTab", 4483362458)
local discordtab = Window:CreateTab("DiscordTab", 4483362458)

-- Labels
infotab:CreateLabel("Vox Seas Andrey Hub", 4483362458, Color3.fromRGB(255, 255, 255), false)
farmtab:CreateLabel("Auto Farm", 4483362458, Color3.fromRGB(255, 255, 255), false)
farmtab:CreateLabel("Game", 4483362458, Color3.fromRGB(255, 255, 255), false)
discordtab:CreateLabel("Entre No Nosso Discord Para Pegar as Atualizações", 4483362458, Color3.fromRGB(114, 137, 218), false)
discordtab:CreateLabel("https://discord.gg/KkVZEcwN", 4483362458, Color3.fromRGB(114, 137, 218), false)

-- Kill Nearby Mobs
farmtab:CreateToggle({
   Name = "Kill Nearby Mobs",
   CurrentValue = false,
   Flag = "KillAuraToggle",
   Callback = function(Value)
      if Value then
         killAuraConnection = RunService.Heartbeat:Connect(function()
            for _, mob in ipairs(workspace:GetDescendants()) do
               if mob:IsA("Model") and mob ~= character then
                  local humanoid = mob:FindFirstChildOfClass("Humanoid")
                  local mobRoot = mob:FindFirstChild("HumanoidRootPart")
                  if humanoid and mobRoot and humanoid.Health > 0 then
                     local distance = (rootPart.Position - mobRoot.Position).Magnitude
                     if distance <= killDistance then
                        humanoid.Health = 0
                     end
                  end
               end
            end
         end)
      else
         if killAuraConnection then
            killAuraConnection:Disconnect()
            killAuraConnection = nil
         end
      end
   end
})

-- Bring Nearby Mobs
farmtab:CreateToggle({
   Name = "Bring Nearby Mobs",
   CurrentValue = false,
   Flag = "BringMobsToggle",
   Callback = function(Value)
      if Value then
         bringMobsConnection = RunService.Heartbeat:Connect(function()
            for _, mob in ipairs(workspace:GetDescendants()) do
               if mob:IsA("Model") and mob ~= character then
                  local humanoid = mob:FindFirstChildOfClass("Humanoid")
                  local mobRoot = mob:FindFirstChild("HumanoidRootPart")
                  if humanoid and mobRoot and humanoid.Health > 0 then
                     local distance = (rootPart.Position - mobRoot.Position).Magnitude
                     if distance <= killDistance then
                        mobRoot.CFrame = rootPart.CFrame * CFrame.new(math.random(-3,3), 0, math.random(-3,3))
                     end
                  end
               end
            end
         end)
      else
         if bringMobsConnection then
            bringMobsConnection:Disconnect()
            bringMobsConnection = nil
         end
      end
   end
})

-- Auto Farm Level
farmtab:CreateToggle({
   Name = "Auto Farm Level",
   CurrentValue = false,
   Flag = "AutoFarmToggle",
   Callback = function(Value)
      if Value then
         autoFarmConnection = RunService.Heartbeat:Connect(function()
            -- Procurar NPC de missão
            local nearestQuestNPC, nearestDist
            for _, npc in ipairs(workspace:GetDescendants()) do
               if npc:IsA("Model") and npc:FindFirstChild("QuestGiver") then
                  local npcRoot = npc:FindFirstChild("HumanoidRootPart") or npc:FindFirstChild("Head")
                  if npcRoot then
                     local dist = (rootPart.Position - npcRoot.Position).Magnitude
                     if not nearestDist or dist < nearestDist then
                        nearestQuestNPC = npc
                        nearestDist = dist
                     end
                  end
               end
            end

            if nearestQuestNPC and nearestDist and nearestDist < 30 then
               local npcRoot = nearestQuestNPC:FindFirstChild("HumanoidRootPart") or nearestQuestNPC:FindFirstChild("Head")
               if npcRoot then
                  firetouchinterest(rootPart, npcRoot, 0)
                  wait(0.2)
                  firetouchinterest(rootPart, npcRoot, 1)
               end
            end

            -- Matar mobs da missão
            for _, mob in ipairs(workspace:GetDescendants()) do
               if mob:IsA("Model") and mob ~= character then
                  local humanoid = mob:FindFirstChildOfClass("Humanoid")
                  local mobRoot = mob:FindFirstChild("HumanoidRootPart")
                  if humanoid and mobRoot and humanoid.Health > 0 then
                     local distance = (rootPart.Position - mobRoot.Position).Magnitude
                     if distance <= 30 then
                        humanoid.Health = 0
                     end
                  end
               end
            end
         end)
      else
         if autoFarmConnection then
            autoFarmConnection:Disconnect()
            autoFarmConnection = nil
         end
      end
   end
})

-- Infinite Jump
configtab:CreateToggle({
   Name = "Infinite Jump",
   CurrentValue = false,
   Flag = "InfiniteJumpToggle",
   Callback = function(Value)
      infiniteJumpEnabled = Value
      if infiniteJumpEnabled then
         infiniteJumpConnection = UserInputService.JumpRequest:Connect(function()
            local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
               humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
         end)
      else
         if infiniteJumpConnection then
            infiniteJumpConnection:Disconnect()
            infiniteJumpConnection = nil
         end
      end
   end
})

-- WalkSpeed Slider
configtab:CreateSlider({
   Name = "WalkSpeed",
   Range = {16, 100},
   Increment = 1,
   Suffix = "Velocidade",
   CurrentValue = 16,
   Flag = "WalkSpeedSlider",
   Callback = function(Value)
      walkSpeedValue = Value
      if walkSpeedEnabled and player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
         player.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = walkSpeedValue
      end
   end
})

-- Ativar WalkSpeed
configtab:CreateToggle({
   Name = "Ativar WalkSpeed",
   CurrentValue = false,
   Flag = "WalkSpeedToggle",
   Callback = function(Value)
      walkSpeedEnabled = Value
      local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
      if humanoid then
         humanoid.WalkSpeed = walkSpeedEnabled and walkSpeedValue or 16
      end
   end
})
